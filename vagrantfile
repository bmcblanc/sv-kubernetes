Vagrant.configure("2") do |config|
	# main box used by consumers of sv-kubernetes
	config.vm.define "primary", primary: true do |c|
		c.vm.box = "owenallenaz/sv-kubernetes"
		c.vm.box_version = "0.0.4"
		c.vm.box_architecture = "amd64"
		c.vm.hostname = "sv-kube"
		c.vm.network "private_network", ip: "192.168.50.100"
		c.vm.synced_folder ".", "/sv", owner: "root", group: "root", type: "smb"
		c.ssh.username = "root"
		c.ssh.password = "vagrant"
		c.vm.provider "virtualbox" do |v|
			# Sets the memory to either 4096MiB or total mem / 4, whichever is larger
			mem = get_memory(4096, 0.25)
			v.cpus = 2
			v.customize ["modifyvm", :id, "--audio", "none"]
			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--memory", mem]

			file_to_disk = File.realpath( "." ).to_s + "/extended-disk.vdi"
			if !File.exist?(file_to_disk)
				v.customize [
					'createhd',
					'--filename', file_to_disk,
					'--format', 'VDI',
					'--size', 100 * 1024 # 100 GB
				]
				v.customize [
					'storageattach', :id,
					'--storagectl', 'SATA Controller',
					'--port', 1, '--device', 0,
					'--type', 'hdd', '--medium',
					file_to_disk
				]
			end
		end

		c.vm.provision "file", source: "~/.ssh/github_key", destination: "/root/.ssh/github_key"
		c.vm.provision "shell", inline: "/bin/bash /sv/scripts/extend_disk.sh"
	end

	# development box used for working with packer to generate the base box
	config.vm.define "base", autostart: false do |c|
		c.vm.box = "bento/ubuntu-22.04"
		c.vm.box_version = "202206.03.0"
		c.vm.network "private_network", ip: "192.168.50.101"
		c.vm.synced_folder ".", "/sv"
		c.vm.provider "virtualbox" do |v|
			# Sets the memory to either 4096MiB or total mem / 4, whichever is larger
			mem = get_memory(4096, 0.25)
			v.cpus = 2
			v.customize ["modifyvm", :id, "--memory", mem]
		end
	end
end

# Determines amount of memory to allocate to Vagrant box, in mebibytes (MiB)
def get_memory(mem_min, mem_ratio)
	total_mem = nil
	if Vagrant::Util::Platform.windows?
		total_mem = `wmic OS get TotalVisibleMemorySize`.split("\n")[2].to_i / 1024
	elsif Vagrant::Util::Platform.darwin? # mac
		total_mem = `sysctl -n hw.memsize`.strip().to_i / ( 1024 * 1024 )
	else # linux
		total_mem = `awk '/MemTotal/ {print $2}' /proc/meminfo`.strip().to_i / 1024
	end

	[ (total_mem * mem_ratio).round, mem_min ].max
end

